{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","items","setItems","pageCount","setpageCount","useEffect","a","fetch","res","json","data","total","headers","get","Math","ceil","getComments","fetchComments","currentPage","handlePageClick","console","log","selected","commentsFormServer","className","map","item","style","minHeight","id","email","body","previousLable","nextLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","activeClassName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAiGkBA,MA7FlB,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAGqBF,mBAAS,GAH9B,mBAGNG,EAHM,KAGKC,EAHL,KAObC,qBAAU,YACS,uCAAG,gCAAAC,EAAA,sEACAC,MAAM,gEAAD,OAJf,IAGU,cACZC,EADY,gBAICA,EAAIC,OAJL,OAIZC,EAJY,OAKZC,EAAQH,EAAII,QAAQC,IAAI,iBAC9BT,EAAaU,KAAKC,KAAKJ,EATf,IAWRT,EAASQ,GARS,2CAAH,qDAUjBM,KAEC,IAIH,IAAMC,EAAa,uCAAG,WAAOC,GAAP,iBAAAZ,EAAA,sEACFC,MAAM,uDAAD,OACkCW,EADlC,mBApBb,IAmBU,cACdV,EADc,gBAIDA,EAAIC,OAJH,cAIdC,EAJc,yBAKbA,GALa,2CAAH,sDASbS,EAAe,uCAAG,WAAOT,GAAP,iBAAAJ,EAAA,6DAEtBc,QAAQC,IAAIX,EAAKY,UAEbJ,EAAcR,EAAKY,SAAW,EAJZ,SAKWL,EAAcC,GALzB,OAKhBK,EALgB,OAMtBrB,EAASqB,GANa,2CAAH,sDAUrB,OACE,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,UAAf,SAEGvB,EAAMwB,KAAI,SAACC,GACV,OAEE,qBAAmBF,UAAU,2BAA7B,SACE,qBAAKA,UAAU,uBAAuBG,MAAO,CAAEC,UAAW,KAA1D,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAIA,UAAU,4BAAd,iBAA+CE,EAAKG,GAApD,OAEA,qBAAIL,UAAU,4CAAd,oBAAkEE,EAAKI,MAAvE,OACA,oBAAGN,UAAU,YAAb,wBAAqCE,EAAKK,cANtCL,EAAKG,SAsBrB,cAAC,IAAD,CACEG,cAAe,WACfC,UAAW,OACX9B,UAAWA,EACX+B,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAcjB,EACdkB,mBAAoB,oCACpBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,gBAAiB,eC9EVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ff2ff43d.chunk.js","sourcesContent":["import Reactpaginate from \"react-paginate\";\nimport { useState, useEffect } from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [items, setItems] = useState([]);\n\n  const [pageCount, setpageCount] = useState(0);\n\n  let limit = 6 ;\n\n  useEffect(() => {\n    const getComments = async () => {\n      const res = await fetch(\n        `https://jsonplaceholder.typicode.com/comments?_page=2&_limit=${limit}`\n      );\n      const data = await res.json();\n      const total = res.headers.get('x-total-count');\n      setpageCount(Math.ceil(total / limit));\n      // console.log(total);\n      setItems(data);\n    };\n    getComments();\n\n  }, []);\n\n  // console.log(items);\n\n  const fetchComments = async (currentPage) => {\n    const res = await fetch(\n      `https://jsonplaceholder.typicode.com/comments?_page=${currentPage}&_limit=${limit}`\n    );\n    const data = await res.json();\n    return data;\n  };\n\n\n  const handlePageClick = async (data) => {\n\n    console.log(data.selected);\n\n    let currentPage = data.selected + 1\n    const commentsFormServer = await fetchComments(currentPage);\n    setItems(commentsFormServer);\n  };\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"row m-2\">\n\n        {items.map((item) => {\n          return (\n\n            <div key={item.id} className=\"col-sm-8 col-md-4 v my-2\">\n              <div className=\"card shadow-sm w-100\" style={{ minHeight: 225 }}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title text-center h2\">Id: {item.id} </h5>\n                  {/* <h6 className=\"card-subtitle mb-2 text-muted text-center\"> Name: {item.name} </h6> */}\n                  <h6 className=\"card-subtitle mb-2 text-muted text-center\">Email: {item.email} </h6>\n                  <p className=\"card-text\">Comments:  {item.body}</p>\n\n\n\n                </div>\n              </div>\n\n            </div>\n          );\n\n        })}\n      </div>\n\n\n\n\n      <Reactpaginate\n        previousLable={'previous'}\n        nextLabel={\"next\"}\n        pageCount={pageCount}\n        marginPagesDisplayed={3}\n        pageRangeDisplayed={5}\n        onPageChange={handlePageClick}\n        containerClassName={'pagination justify-content-center'}\n        pageClassName={'page-item'}\n        pageLinkClassName={'page-link'}\n        previousClassName={'page-item'}\n        previousLinkClassName={'page-link'}\n        nextClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        activeClassName={'active'}\n\n\n      />\n\n    </div>\n  );\n}; export default App ;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}